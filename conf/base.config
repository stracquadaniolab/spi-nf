// basic information about the workflow
manifest {
  name = 'spi-nf'
  description = 'spi-nf: The SCRaMbLE Polymer Interaction model (SPI) workflow'
  version = '0.0.0'
  homePage = 'https://github.com/stracquadaniolab/spi-nf.git'
  author = 'Giovanni Stracquadanio'
  nextflowVersion = '>=20.07.1'
}

// default configuration
executor {
	name = 'local'
	cpus   = 1
	memory = 8.GB
  queueSize = 5
}

process {
	executor = 'local'
	cpus = 1
	memory = 2.GB
	shell = ['/bin/bash', '-euo', 'pipefail']
}

// Export this variable to prevent local Python libraries
// from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
}

// profiles to setup runtimes, executors, and process resources
profiles {

    docker {
        docker.enabled         = true
        docker.userEmulation   = true
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false

        process.container = "ghcr.io/stracquadaniolab/spi-nf:0.0.0"
    }

    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false

        process.container = "docker://ghcr.io/stracquadaniolab/spi-nf:0.0.0"
    }

    slurm {
        executor.queueSize = 25
        process.executor='slurm'
        process.queue='compute'
    }

    apple {
      docker.runOptions = '--platform linux/amd64'
    }    

    ci {
        executor.name = 'local'
        executor.cpus   = 1
        executor.memory = 2.GB
        executor.queueSize = 5

        process.executor = 'local'
        process.cpus = 1
        process.memory = 2.GB
        process.shell = ['/bin/bash', '-euo', 'pipefail']
    }

    // profile containing dummy data to test the workflow
    test {
        params {
          name = "test"

          genome.structure = "${baseDir}/testdata/syn9r_structure.txt"
          genome.reconstruction = "${baseDir}/testdata/syn9r_reconstructions.txt"

          model.lambda = [5]
          model.nu = [0.6]
          model.b = [290]
          model.configs = 10

          
          model.reweight.run = true
          model.reweight.lambda = [5,6]
          model.reweight.nu = [0.5,0.6]
          model.reweight.b = [145,290]
        }
    }

}

// configuring log information
report {
    enabled = true
    file = "logs/execution_report.html"
}